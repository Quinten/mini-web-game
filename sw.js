(()=>{var e,t,n,r={},i=r={};function c(){throw Error("setTimeout has not been defined")}function o(){throw Error("clearTimeout has not been defined")}function u(t){if(e===setTimeout)return setTimeout(t,0);if((e===c||!e)&&setTimeout)return e=setTimeout,setTimeout(t,0);try{return e(t,0)}catch(n){try{return e.call(null,t,0)}catch(n){return e.call(this,t,0)}}}!function(){try{e="function"==typeof setTimeout?setTimeout:c}catch(t){e=c}try{t="function"==typeof clearTimeout?clearTimeout:o}catch(e){t=o}}();var l=[],s=!1,a=-1;function h(){s&&n&&(s=!1,n.length?l=n.concat(l):a=-1,l.length&&f())}function f(){if(!s){var e=u(h);s=!0;for(var r=l.length;r;){for(n=l,l=[];++a<r;)n&&n[a].run();a=-1,r=l.length}n=null,s=!1,function(e){if(t===clearTimeout)return clearTimeout(e);if((t===o||!t)&&clearTimeout)return t=clearTimeout,clearTimeout(e);try{t(e)}catch(n){try{return t.call(null,e)}catch(n){return t.call(this,e)}}}(e)}}function d(e,t){this.fun=e,this.array=t}function m(){}i.nextTick=function(e){var t=Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];l.push(new d(e,t)),1!==l.length||s||u(f)},d.prototype.run=function(){this.fun.apply(null,this.array)},i.title="browser",i.browser=!0,i.env={},i.argv=[],i.version="",i.versions={},i.on=m,i.addListener=m,i.once=m,i.off=m,i.removeListener=m,i.removeAllListeners=m,i.emit=m,i.prependListener=m,i.prependOnceListener=m,i.listeners=function(e){return[]},i.binding=function(e){throw Error("process.binding is not supported")},i.cwd=function(){return"/"},i.chdir=function(e){throw Error("process.chdir is not supported")},i.umask=function(){return 0};let p=void 0===r?"peegee":"mini-web-game",v=["index.html"],T=e=>{let t=new Request(e,{cache:"reload"});if("cache"in t)return t;let n=new URL(e,self.location.href);return n.search+=(n.search?"&":"")+"cachebust="+Date.now(),new Request(n)};self.addEventListener("install",e=>{e.waitUntil(caches.open(p).then(e=>e.addAll(v)).then(self.skipWaiting()))}),self.addEventListener("activate",e=>{let t=[p];e.waitUntil(caches.keys().then(e=>e.filter(e=>!t.includes(e))).then(e=>Promise.all(e.map(e=>caches.delete(e)))).then(()=>self.clients.claim()))}),self.addEventListener("fetch",e=>{e.respondWith(fetch(T(e.request.url)).then(t=>(caches.open(p).then(n=>n.put(e.request.url,t.clone())),t.clone())).catch(t=>caches.match(e.request.url)))})})();